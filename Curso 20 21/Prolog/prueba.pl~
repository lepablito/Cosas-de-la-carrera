:-op(40, xfy, &).
:-op(50, xfy, --->).
/* Tabla de predicados predefinidos aceptados */
built_in(A is B). built_in(A > B). built_in(A < B).
built_in(A = B). built_in(A =:= B). built_in(A =< B).
built_in(A >= B). built_in(functor(T, F, N)).
built_in(read(X)). built_in(write(X)).
solve(true):-!.
solve((A & B)) :-!, solve(A), solve(B).
solve(A):- built_in(A), !, A.
solve(A) :- (B ---> A), solve(B).

/*Base de conocimiento*/
/* regla para las lámparas/luces */
light(L) & ok(L) & live(L) ---> lit(L).

/* conexion de cables a la tension */
connected_to(W,W1) &  live(W1) ---> live(W).

/* hechos básicos: qué sabemos del problema */
true ---> live(outside).
true ---> light(l1).
true ---> light(l2).
true ---> down(s1).
true ---> up(s2).
true ---> up(s3).
true ---> connected_to(l1,w0).

up(s2) & ok(s2) ---> connected_to(w0,w1).
down(s2) & ok(s2) ---> connected_to(w0,w2).
up(s1) & ok(s1) ---> connected_to(w1,w3).
down(s1) & ok(s1) ---> connected_to(w2,w3).
true ---> connected_to(l2,w4).
up(s3) & ok(s3) ---> connected_to(w4,w3).
true ---> connected_to(p1,w3).
ok(cb1) ---> connected_to(w3,w5).
true ---> connected_to(p2,w6).
ok(cb2) ---> connected_to(w6,w5).

true ---> connected_to(w5,outside).
true ---> ok(_).
